<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<Product>Bundle Transformer: Core</Product>
		<VersionPrefix>1.9.213</VersionPrefix>
		<TargetFramework>net40</TargetFramework>
		<OutputType>Library</OutputType>
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<NoWarn>$(NoWarn);CS1591;NU5125</NoWarn>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<Description>Bundle Transformer - a modular extension for the System.Web.Optimization (also known as the Microsoft ASP.NET Web Optimization Framework). `StyleTransformer` and `ScriptTransformer` classes, included in the core of Bundle Transformer and implement the `IBundleTransform` interface. They are intended to replace the standard classes: `CssMinify` and `JsMinify`.

The main differences of the `StyleTransformer` and `ScriptTransformer` classes from a standard implementations: ability to exclude unnecessary assets when adding assets from a directory, does not produce the re-minification of pre-minified assets, support automatic transformation of relative paths to absolute in CSS code (by using the `UrlRewritingCssPostProcessor`), etc. These classes do not produce the minification of code in runtime, but this feature can be added by installing of minifier-modules (now available modules based on Microsoft Ajax Minifier, YUI Compressor for .NET, NUglify, Google Closure Compiler, Douglas Crockford's JSMin, Dean Edwards' Packer, Mihai Bazon's UglifyJS, Sergey Kryzhanovsky's CSSO (CSS Optimizer), WebGrease and Clean-css). In addition, you can also install translator-modules, that implement the translation of code on intermediate languages (LESS, Sass, SCSS, CoffeeScript, TypeScript, Mustache (by using Hogan) and Handlebars). Apart from this, in the Bundle Transformer there is a third type of modules - postprocessors. Postprocessors runs after translators and before minifiers. Now available following postprocessors: URL rewriting CSS postprocessor (included in core) and postprocessor-module based on the Andrey Sitnik's Autoprefixer.

This extension will help your web applications successfully pass a most part of the tests in Google PageSpeed.</Description>
		<PackageIconUrl>https://raw.githubusercontent.com/Taritsyn/BundleTransformer/master/images/icons/128/BundleTransformer_Core_Logo_128x128.png</PackageIconUrl>
		<PackageTags>BundleTransformer;System.Web.Optimization;IBundleTransform;ASP.NET;CSS;JavaScript;JS;Bundling;Performance;Optimization;YSlow;Speed;Pre-minified;Combine;Compression</PackageTags>
		<PackageReleaseNotes>Part of the auxiliary code was replaced by the AdvancedStringBuilder library.</PackageReleaseNotes>
	</PropertyGroup>

	<Import Project="../../build/common.props" />
	<Import Project="../../build/strong-name-signing.props" />
	<Import Project="../../build/nuget-metadata.props" />

	<ItemGroup>
		<Reference Include="System.configuration" Pack="false" />
		<Reference Include="System.Web" Pack="false" />

		<PackageReference Include="AdvancedStringBuilder" Version="0.1.0" />
		<PackageReference Include="Microsoft.AspNet.Web.Optimization" Version="1.1.3" />
	</ItemGroup>

	<ItemGroup>
		<EmbeddedResource Update="Resources/Strings.resx">
			<Generator>PublicResXFileCodeGenerator</Generator>
			<LastGenOutput>Strings.Designer.cs</LastGenOutput>
		</EmbeddedResource>
		<EmbeddedResource Update="Resources/Strings.ru-ru.resx">
			<Generator>PublicResXFileCodeGenerator</Generator>
		</EmbeddedResource>

		<Compile Update="Resources/Strings.Designer.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>Strings.resx</DependentUpon>
		</Compile>
	</ItemGroup>

	<ItemGroup>
		<Content Include="web.config.transform">
			<PackagePath>content/web.config.transform</PackagePath>
			<Pack>true</Pack>
		</Content>
		<Content Include="readme.txt">
			<PackagePath>readme.txt</PackagePath>
			<Pack>true</Pack>
		</Content>
		<Content Include="../../Licenses/microsoft-aspnet-web-optimization-license.txt">
			<PackagePath>microsoft-aspnet-web-optimization-license.txt</PackagePath>
			<Pack>true</Pack>
			<Visible>false</Visible>
		</Content>
	</ItemGroup>

</Project>